{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _forceHelper = require(\"./forceHelper\");\nvar forceLayout = _forceHelper.forceLayout;\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\nvar circularLayout = _circularLayoutHelper.circularLayout;\nvar _number = require(\"../../util/number\");\nvar linearMap = _number.linearMap;\nvar vec2 = require(\"zrender/lib/core/vector\");\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries, 'value');\n      }\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n        var edgeModel = edge.getModel();\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edgeModel.get('lineStyle.curveness') || 0,\n          ignoreForceLayout: edgeModel.get('ignoreForceLayout')\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity'),\n        friction: forceModel.get('friction')\n      });\n      var oldStep = forceInstance.step;\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n            edge.setLayout(points);\n          } // Update layout\n\n          cb && cb(stopped);\n        });\n      };\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\nmodule.exports = _default;","map":{"version":3,"names":["_forceHelper","require","forceLayout","_simpleLayoutHelper","simpleLayout","_circularLayoutHelper","circularLayout","_number","linearMap","vec2","zrUtil","_default","ecModel","eachSeriesByType","graphSeries","coordSys","coordinateSystem","type","get","preservedPoints","graph","getGraph","nodeData","data","edgeData","forceModel","getModel","initLayout","each","idx","id","getId","setItemLayout","NaN","nodeDataExtent","getDataExtent","edgeDataExtent","repulsion","edgeLength","isArray","nodes","mapArray","value","point","getItemLayout","rep","isNaN","w","fixed","getItemModel","p","edges","edge","getEdgeByIndex","d","edgeModel","n1","node1","dataIndex","n2","node2","curveness","ignoreForceLayout","rect","getBoundingRect","forceInstance","gravity","friction","oldStep","step","cb","i","l","length","copy","getNodeByIndex","getLayout","stopped","setLayout","e","p1","p2","points","slice","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/graph/forceLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries, 'value');\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        var edgeModel = edge.getModel();\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edgeModel.get('lineStyle.curveness') || 0,\n          ignoreForceLayout: edgeModel.get('ignoreForceLayout')\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity'),\n        friction: forceModel.get('friction')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}