{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-08aea0bb\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"title\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n    class: \"wordCloud__tagBall\",\n    style: _normalizeStyle({\n      width: `${this.width}px`,\n      height: `${this.height}px`\n    }),\n    onMouseenter: _cache[0] || (_cache[0] = (...args) => $options.stop && $options.stop(...args)),\n    onMouseleave: _cache[1] || (_cache[1] = (...args) => $options.start && $options.start(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      class: \"wordCloud__tag\",\n      key: index,\n      style: _normalizeStyle({\n        color: _ctx.color[index % _ctx.color.length],\n        ..._ctx.contentEle[index].style\n      }),\n      title: item.name + item.value\n    }, _toDisplayString(item.name), 13 /* TEXT, STYLE, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 36 /* STYLE, HYDRATE_EVENTS */)]);\n}","map":{"version":3,"mappings":";;;;uBACEA,oBAeM,cAdJC,oBAaM;IAZFC,KAAK,EAAC,oBAAoB;IACzBC,KAAK;MAAAC,eAAiBA,KAAK;MAAAC,gBAAoBA,MAAM;IAAA;IACrDC,YAAU,yCAAEC,uCAAI;IAChBC,YAAU,yCAAED,yCAAK;yBAEpBP,oBAMqBS,6BAJOC,WAAI,GAApBC,IAAI,EAAEC,KAAK;yBAFvBZ,oBAMqB;MALjBE,KAAK,EAAC,gBAAgB;MAErBW,GAAG,EAAED,KAAK;MACVT,KAAK;QAAAW,OAASC,UAAK,CAACH,KAAK,GAAGG,UAAK,CAACC,MAAM;QAAA,GAAKD,eAAU,CAACH,KAAK,EAAET;MAAK;MACpEc,KAAK,EAAEN,IAAI,CAACO,IAAI,GAACP,IAAI,CAACQ;wBACxBR,IAAI,CAACO,IAAI","names":["_createElementBlock","_createElementVNode","class","style","width","height","onMouseenter","$options","onMouseleave","_Fragment","$props","item","index","key","color","_ctx","length","title","name","value"],"sourceRoot":"","sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/src/components/NounCloud.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n        class=\"wordCloud__tagBall\"\n        :style=\"{width:`${this.width}px`,height:`${this.height}px`}\"\n        @mouseenter=\"stop\"\n        @mouseleave=\"start\"\n    >\n      <span\n          class=\"wordCloud__tag\"\n          v-for=\"(item, index) of data\"\n          :key=\"index\"\n          :style=\"{color:color[index % color.length],...contentEle[index].style}\"\n          :title=\"item.name+item.value\"\n      >{{item.name}}</span>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: 'cloudWork',\n  props: {\n    width: {\n      type: Number,\n      default: 300\n    },\n    height: {\n      type: Number,\n      default: 300\n    },\n    // 测试数据\n    data: {\n      type: Array,\n      default: () => [\n        {\n          name: '安氏一类',\n          value: 100\n        },\n        {\n          name: '安氏二类',\n          value: 30\n        },\n        {\n          name: '安氏三类',\n          value: 30\n        },\n        {\n          name: '安氏四类',\n          value: 30\n        },\n        {\n          name: '安氏五类',\n          value: 30\n        },\n        {\n          name: '安氏一类',\n          value: 30\n        },\n        {\n          name: '安氏二类',\n          value: 30\n        },\n        {\n          name: '安氏三类',\n          value: 30\n        },\n        {\n          name: '安氏四类',\n          value: 30\n        },\n        {\n          name: '安氏五类',\n          value: 30\n        },\n        {\n          name: '安氏一类',\n          value: 30\n        },\n        {\n          name: '安氏二类',\n          value: 30\n        },\n        {\n          name: '安氏三类',\n          value: 30\n        },\n        {\n          name: '安氏四类',\n          value: 30\n        },\n        {\n          name: '安氏五类',\n          value: 30\n        }\n      ]\n    }\n  },\n  data: () => ({\n    color: ['#2D4DB6', '#04B67C', '#D1AF07', '#E27914', '#CB4A4D', '#B02690'],\n    contentEle: [],\n    direction: '-1',\n    speed: 400,\n    animateID: null\n  }),\n  created() {\n    this.contentEle = this.data.map(() => ({\n      x: 0,\n      y: 0,\n      z: 0,\n      style: {}\n    }));\n  },\n  mounted() {\n    this.innit();\n  },\n  methods: {\n    innit() {\n      const RADIUSX = (this.width - 50) / 2;\n      const RADIUSY = (this.height - 50) / 2;\n      this.contentEle = [];\n      for (let i = 0; i < this.data.length; i += 1) {\n        const k = -1 + (2 * (i + 1) - 1) / this.data.length;\n        const a = Math.acos(k);\n        const b = a * Math.sqrt(this.data.length * Math.PI);\n        const x = RADIUSX * Math.sin(a) * Math.cos(b);\n        const y = RADIUSY * Math.sin(a) * Math.sin(b);\n        const z = RADIUSX * Math.cos(a);\n        const singleEle = {\n          x,\n          y,\n          z,\n          style: {}\n        };\n        this.contentEle.push(singleEle);\n      }\n      this.animate();\n    },\n    animate() {\n      this.rotateX();\n      this.rotateY();\n      this.move();\n      this.animateID = window.requestAnimationFrame(this.animate);\n    },\n    rotateX() {\n      const angleX = ['-1', '1'].includes(this.direction)\n          ? Math.PI / Infinity\n          : Math.PI / ((Number(this.direction) / 2) * Number(this.speed));\n      const cos = Math.cos(angleX);\n      const sin = Math.sin(angleX);\n\n      this.contentEle = this.contentEle.map((t) => {\n        const y1 = t.y * cos - t.z * sin;\n        const z1 = t.z * cos + t.y * sin;\n        return {\n          ...t,\n          y: y1,\n          z: z1\n        };\n      });\n    },\n    rotateY() {\n      const angleY = ['-2', '2'].includes(this.direction)\n          ? Math.PI / Infinity\n          : Math.PI / (Number(this.direction) * Number(this.speed));\n      const cos = Math.cos(angleY);\n      const sin = Math.sin(angleY);\n      this.contentEle = this.contentEle.map((t) => {\n        const x1 = t.x * cos - t.z * sin;\n        const z1 = t.z * cos + t.x * sin;\n        return {\n          ...t,\n          x: x1,\n          z: z1\n        };\n      });\n    },\n    move() {\n      const CX = this.width / 2;\n      const CY = this.height / 2;\n      this.contentEle = this.contentEle.map((singleEle) => {\n        const { x, y, z } = singleEle;\n        const fallLength = 500;\n        const RADIUS = (this.width - 50) / 2;\n        const scale = fallLength / (fallLength - z);\n        const alpha = (z + RADIUS) / (2 * RADIUS);\n        const left = `${x + CX - 15}px`;\n        const top = `${y + CY - 15}px`;\n        const transform = `translate(${left}, ${top}) scale(${scale})`;\n        const style = {\n          ...singleEle.style,\n          opacity: alpha + 0.5,\n          zIndex: parseInt(scale * 100, 10),\n          transform\n        };\n        return {\n          x,\n          y,\n          z,\n          style\n        };\n      });\n    },\n    // 鼠标移入暂停\n    stop() {\n      window.cancelAnimationFrame(this.animateID);\n    },\n    // 鼠标离开恢复\n    start() {\n      this.animate();\n    }\n  }\n};\n</script>\n\n\n<style  scoped>\nbutton {\n  margin: 20px;\n}\n.wordCloud__tagBall {\n  margin: 50px auto;\n  position: relative;\n}\n\n.wordCloud__tag {\n  display: block;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  color: green;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: '微软雅黑';\n  font-weight: bold;\n}\n.wordCloud__tag :hover {\n  color: red;\n}\n\n.wordCloud__home {\n  display: flex;\n  justify-content: center;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}