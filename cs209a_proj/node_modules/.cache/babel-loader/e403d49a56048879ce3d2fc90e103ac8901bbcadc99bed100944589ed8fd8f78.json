{"ast":null,"code":"import { logError, each } from '../core/util.js';\nimport * as vmlCore from './core.js';\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize();\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n  storage.addToStorage = function (el) {\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n  this._firstPaint = true;\n}\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        }\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n        el.__alreadyNotVisible = false;\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n      el.__dirty = false;\n    }\n    if (this._firstPaint) {\n      this._vmlViewport.appendChild(vmlRoot);\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n    if (this._width !== width || this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n};\nfunction createMethodNotSupport(method) {\n  return function () {\n    logError('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n}\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nexport default VMLPainter;","map":{"version":3,"names":["logError","each","vmlCore","parseInt10","val","parseInt","VMLPainter","root","storage","initVML","vmlViewport","document","createElement","vmlRoot","style","cssText","appendChild","_vmlRoot","_vmlViewport","resize","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","el","call","onRemove","onAdd","_firstPaint","prototype","constructor","getType","getViewportRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","i","length","invisible","ignore","__alreadyNotVisible","__dirty","beforeBrush","brushVML","brush","afterBrush","width","height","_getWidth","_getHeight","_width","_height","vmlViewportStyle","dispose","innerHTML","getWidth","getHeight","clear","removeChild","stl","currentStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","createMethodNotSupport","method","name"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/zrender/lib/vml/Painter.js"],"sourcesContent":["import { logError, each } from '../core/util.js';\nimport * as vmlCore from './core.js';\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction VMLPainter(root, storage) {\n    vmlCore.initVML();\n    this.root = root;\n    this.storage = storage;\n    var vmlViewport = document.createElement('div');\n    var vmlRoot = document.createElement('div');\n    vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n    vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n    root.appendChild(vmlViewport);\n    this._vmlRoot = vmlRoot;\n    this._vmlViewport = vmlViewport;\n    this.resize();\n    var oldDelFromStorage = storage.delFromStorage;\n    var oldAddToStorage = storage.addToStorage;\n    storage.delFromStorage = function (el) {\n        oldDelFromStorage.call(storage, el);\n        if (el) {\n            el.onRemove && el.onRemove(vmlRoot);\n        }\n    };\n    storage.addToStorage = function (el) {\n        el.onAdd && el.onAdd(vmlRoot);\n        oldAddToStorage.call(storage, el);\n    };\n    this._firstPaint = true;\n}\nVMLPainter.prototype = {\n    constructor: VMLPainter,\n    getType: function () {\n        return 'vml';\n    },\n    getViewportRoot: function () {\n        return this._vmlViewport;\n    },\n    getViewportRootOffset: function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    },\n    refresh: function () {\n        var list = this.storage.getDisplayList(true, true);\n        this._paintList(list);\n    },\n    _paintList: function (list) {\n        var vmlRoot = this._vmlRoot;\n        for (var i = 0; i < list.length; i++) {\n            var el = list[i];\n            if (el.invisible || el.ignore) {\n                if (!el.__alreadyNotVisible) {\n                    el.onRemove(vmlRoot);\n                }\n                el.__alreadyNotVisible = true;\n            }\n            else {\n                if (el.__alreadyNotVisible) {\n                    el.onAdd(vmlRoot);\n                }\n                el.__alreadyNotVisible = false;\n                if (el.__dirty) {\n                    el.beforeBrush && el.beforeBrush();\n                    (el.brushVML || el.brush).call(el, vmlRoot);\n                    el.afterBrush && el.afterBrush();\n                }\n            }\n            el.__dirty = false;\n        }\n        if (this._firstPaint) {\n            this._vmlViewport.appendChild(vmlRoot);\n            this._firstPaint = false;\n        }\n    },\n    resize: function (width, height) {\n        var width = width == null ? this._getWidth() : width;\n        var height = height == null ? this._getHeight() : height;\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            var vmlViewportStyle = this._vmlViewport.style;\n            vmlViewportStyle.width = width + 'px';\n            vmlViewportStyle.height = height + 'px';\n        }\n    },\n    dispose: function () {\n        this.root.innerHTML = '';\n        this._vmlRoot =\n            this._vmlViewport =\n                this.storage = null;\n    },\n    getWidth: function () {\n        return this._width;\n    },\n    getHeight: function () {\n        return this._height;\n    },\n    clear: function () {\n        if (this._vmlViewport) {\n            this.root.removeChild(this._vmlViewport);\n        }\n    },\n    _getWidth: function () {\n        var root = this.root;\n        var stl = root.currentStyle;\n        return ((root.clientWidth || parseInt10(stl.width))\n            - parseInt10(stl.paddingLeft)\n            - parseInt10(stl.paddingRight)) | 0;\n    },\n    _getHeight: function () {\n        var root = this.root;\n        var stl = root.currentStyle;\n        return ((root.clientHeight || parseInt10(stl.height))\n            - parseInt10(stl.paddingTop)\n            - parseInt10(stl.paddingBottom)) | 0;\n    }\n};\nfunction createMethodNotSupport(method) {\n    return function () {\n        logError('In IE8.0 VML mode painter not support method \"' + method + '\"');\n    };\n}\neach([\n    'getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers',\n    'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'\n], function (name) {\n    VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nexport default VMLPainter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}