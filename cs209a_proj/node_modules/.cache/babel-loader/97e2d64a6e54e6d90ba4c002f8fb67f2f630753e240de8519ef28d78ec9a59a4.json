{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_e_charts = _resolveComponent(\"e-charts\");\n  return _openBlock(), _createBlock(_component_e_charts, {\n    option: $options.option\n  }, null, 8 /* PROPS */, [\"option\"]);\n}","map":{"version":3,"mappings":";;;uBACEA,aAAsCC;IAA3BC,MAAM,EAAEC;EAAM","names":["_createBlock","_component_e_charts","option","$options"],"sourceRoot":"","sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/src/components/IssueScatterChart.vue"],"sourcesContent":["<template>\n  <e-charts :option=\"option\"></e-charts>\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nexport default {\n  name: \"IssueScatterChart\",\n  computed:{\n    ...mapGetters([\"getIssueScatter\"]),\n    option(){\n      return {\n        xAxis: {\n          name: 'create time(h, judging from the first issue creating time)'\n        },\n        yAxis: {\n          name: 'duration(h)'\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        series: [\n          {\n            symbolSize: 10,\n            data: this.getIssueScatter,\n            type: 'scatter'\n          }\n        ]\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}