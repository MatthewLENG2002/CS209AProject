{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\nvar SymbolClz = require(\"../helper/Symbol\");\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\nvar graphic = require(\"../../util/graphic\");\nvar modelUtil = require(\"../../util/model\");\nvar _poly = require(\"./poly\");\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\nvar ChartView = require(\"../../view/Chart\");\nvar _helper = require(\"./helper\");\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n  return true;\n}\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n  var points = [];\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n  return points;\n}\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n  var coordDim;\n  var visualMeta;\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\n  if (coordSys.type === 'cartesian2d') {\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n    return clipPath;\n  } else {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step');\n    var clipShapeForSymbol;\n    if (coordSys && coordSys.getArea) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r1 += 0.5;\n      }\n    } // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      });\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults(\n    // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n        if (!pt) {\n          // Null data\n          return;\n        }\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n    this._lineGroup.add(polyline);\n    this._polyline = polyline;\n    return polyline;\n  },\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n    this._lineGroup.add(polygon);\n    this._polygon = polygon;\n    return polygon;\n  },\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n    this._lineGroup.removeAll();\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","_poly","Polyline","Polygon","ChartView","_helper","prepareDataCoordInfo","getStackedOnPoint","_createClipPathFromCoordSys","createGridClipPath","createPolarClipPath","isPointsSame","points1","points2","length","i","p1","p2","getSmooth","smooth","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","points","idx","len","count","push","turnPointsIntoStep","stepTurnAt","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","getVisual","type","coordDim","visualMeta","dimIndex","dimension","dimName","dimensions","dimInfo","getDimensionInfo","axis","getAxis","colorStops","map","stops","stop","coord","toGlobalCoord","dataToCoord","value","color","stopLen","outerColors","slice","reverse","tinyExtent","minCoord","maxCoord","coordSpan","each","offset","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","Math","abs","scale","isNaN","dataLen","step","max","round","getSymbolSize","isHorizontal","createLineClipPath","hasAnimation","clipPath","rectShape","shape","expandSize","width","height","y","x","_default","extend","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","api","coordinateSystem","getData","lineStyleModel","getModel","areaStyleModel","mapArray","getItemLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r1","_step","updateData","isIgnore","clipShape","_newPolyline","_newPolygon","setClipPath","stopAnimation","_stackedOnPoints","_points","_updateAnimation","setShape","visualColor","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","smoothMonotone","connectNulls","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","_valueOrigin","dispose","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","position","setZ","ignore","stopSymbolAnimation","prototype","call","downplay","silent","z2","hostModel","diff","current","stackedOnCurrent","next","stackedOnNext","__points","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","during","attr","removeAll","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\n  if (coordSys.type === 'cartesian2d') {\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    return clipPath;\n  } else {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step');\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r1 += 0.5;\n      }\n    } // Initialization animation or coordinate system changed\n\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}