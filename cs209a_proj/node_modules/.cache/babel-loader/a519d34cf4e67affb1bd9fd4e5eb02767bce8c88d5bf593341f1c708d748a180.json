{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar SeriesModel = require(\"../../model/Series\");\nvar Tree = require(\"../../data/Tree\");\nvar _treeHelper = require(\"../helper/treeHelper\");\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","SeriesModel","Tree","_treeHelper","wrapTreePathInfo","_default","extend","type","_viewRoot","getInitialData","option","ecModel","root","name","children","data","completeTreeValue","levels","treeOption","createTree","optionUpdated","resetViewRoot","getDataParams","dataIndex","params","prototype","apply","arguments","node","getData","tree","getNodeByDataIndex","treePathInfo","defaultOption","zlevel","z","center","radius","clockwise","startAngle","minAngle","percentPrecision","stillShowZeroSum","highlightPolicy","nodeClick","renderLabelForZeroData","label","rotate","show","opacity","align","position","distance","silent","emphasis","itemStyle","borderWidth","borderColor","borderType","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","highlight","downplay","animationType","animationDuration","animationDurationUpdate","animationEasing","sort","getViewRoot","viewRoot","getRawData","contains","dataNode","sum","each","child","childValue","value","isArray","thisValue","isNaN","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/sunburst/SunburstSeries.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true,\n      emphasis: {}\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1,\n      emphasis: {},\n      highlight: {\n        opacity: 1\n      },\n      downplay: {\n        opacity: 0.9\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}