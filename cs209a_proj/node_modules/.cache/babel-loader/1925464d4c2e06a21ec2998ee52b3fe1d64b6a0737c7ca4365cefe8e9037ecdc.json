{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar _symbol = require(\"../../util/symbol\");\nvar createSymbol = _symbol.createSymbol;\nvar graphic = require(\"../../util/graphic\");\nvar _listComponent = require(\"../helper/listComponent\");\nvar makeBackground = _listComponent.makeBackground;\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._selectorGroup = new Group());\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n  /**\n   * @protected\n   */\n  getSelectorGroup: function () {\n    return this._selectorGroup;\n  },\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  },\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color');\n        var borderColor = data.getVisual('borderColor'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // If borderColor is a callback function\n\n        if (typeof borderColor === 'function') {\n          // Use the first data\n          borderColor = borderColor(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode);\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n            if (idx < 0) {\n              return;\n            }\n            var color = data.getItemVisual(idx, 'color');\n            var borderColor = data.getItemVisual(idx, 'borderColor');\n            var legendSymbolType = 'roundRect';\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, borderColor, selectMode); // FIXME: consider different series has items with the same name.\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  },\n  _createSelector: function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function (selectorItem) {\n      createSelectorButton(selectorItem);\n    });\n    function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel('emphasis.selectorLabel');\n      graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, emphasisLabelModel, {\n        defaultText: selectorItem.title,\n        isRectText: false\n      });\n      graphic.setHoverStyle(labelText);\n    }\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var inactiveBorderColor = legendModel.get('inactiveBorderColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var legendModelItemStyle = legendModel.getModel('itemStyle');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    var legendSymbol = createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor,\n    // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect);\n    itemGroup.add(setSymbolStyle(legendSymbol, legendSymbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      }\n      var legendSymbolCenter = createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor,\n      // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect); // Put symbol in the center\n\n      itemGroup.add(setSymbolStyle(legendSymbolCenter, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected));\n    }\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box(\n      // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.attr('position', selectorPos);\n      contentGroup.attr('position', contentPos);\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.attr('position', contentPos);\n      return this.group.getBoundingRect();\n    }\n  },\n  /**\n   * @protected\n   */\n  remove: function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\nfunction setSymbolStyle(symbol, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected) {\n  var itemStyle;\n  if (symbolType !== 'line' && symbolType.indexOf('empty') < 0) {\n    itemStyle = legendModelItemStyle.getItemStyle();\n    symbol.style.stroke = borderColor;\n    if (!isSelected) {\n      itemStyle.stroke = inactiveBorderColor;\n    }\n  } else {\n    itemStyle = legendModelItemStyle.getItemStyle(['borderWidth', 'borderColor']);\n  }\n  return symbol.setStyle(itemStyle);\n}\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","each","Group","_default","extendComponentView","type","newlineDisabled","init","group","add","_contentGroup","_backgroundEl","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","ecModel","api","isFirstRender","resetInner","get","itemAlign","orient","selector","selectorPosition","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","height","getHeight","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","excludeSeriesId","eachRawSeries","seriesModel","push","id","getData","itemModel","dataIndex","name","newline","getSeriesByName","data","color","getVisual","borderColor","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","legendDataProvider","idx","indexOfName","getItemVisual","_createSelector","selectorGroup","selectorItem","createSelectorButton","labelText","Text","style","align","verticalAlign","onclick","dispatchAction","labelModel","getModel","emphasisLabelModel","setLabelStyle","hoverStyle","defaultText","title","isRectText","setHoverStyle","itemWidth","itemHeight","inactiveColor","inactiveBorderColor","symbolKeepAspect","legendModelItemStyle","isSelected","textStyleModel","itemIcon","tooltipModel","legendGlobalTooltipModel","parentModel","legendSymbol","setSymbolStyle","size","legendSymbolCenter","textX","textAlign","formatter","content","replace","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","tooltip","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","option","eachChild","child","silent","__legendDataIndex","box","contentRect","contentPos","selectorRect","selectorPos","selectorButtonGap","orientIdx","getOrient","index","wh","hw","yx","Math","max","min","symbol","itemStyle","indexOf","getItemStyle","stroke","setStyle","seriesName","dataName","el","getZr","storage","getDisplayList","useHoverLayer","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/component/legend/LegendView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._selectorGroup = new Group());\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @protected\n   */\n  getSelectorGroup: function () {\n    return this._selectorGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color');\n        var borderColor = data.getVisual('borderColor'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // If borderColor is a callback function\n\n\n        if (typeof borderColor === 'function') {\n          // Use the first data\n          borderColor = borderColor(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var borderColor = data.getItemVisual(idx, 'borderColor');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, borderColor, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  },\n  _createSelector: function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function (selectorItem) {\n      createSelectorButton(selectorItem);\n    });\n\n    function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel('emphasis.selectorLabel');\n      graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, emphasisLabelModel, {\n        defaultText: selectorItem.title,\n        isRectText: false\n      });\n      graphic.setHoverStyle(labelText);\n    }\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var inactiveBorderColor = legendModel.get('inactiveBorderColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var legendModelItemStyle = legendModel.getModel('itemStyle');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    var legendSymbol = createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect);\n    itemGroup.add(setSymbolStyle(legendSymbol, legendSymbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      }\n\n      var legendSymbolCenter = createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect); // Put symbol in the center\n\n      itemGroup.add(setSymbolStyle(legendSymbolCenter, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.attr('position', selectorPos);\n      contentGroup.attr('position', contentPos);\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.attr('position', contentPos);\n      return this.group.getBoundingRect();\n    }\n  },\n\n  /**\n   * @protected\n   */\n  remove: function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\n\nfunction setSymbolStyle(symbol, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected) {\n  var itemStyle;\n\n  if (symbolType !== 'line' && symbolType.indexOf('empty') < 0) {\n    itemStyle = legendModelItemStyle.getItemStyle();\n    symbol.style.stroke = borderColor;\n\n    if (!isSelected) {\n      itemStyle.stroke = inactiveBorderColor;\n    }\n  } else {\n    itemStyle = legendModelItemStyle.getItemStyle(['borderWidth', 'borderColor']);\n  }\n\n  return symbol.setStyle(itemStyle);\n}\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}