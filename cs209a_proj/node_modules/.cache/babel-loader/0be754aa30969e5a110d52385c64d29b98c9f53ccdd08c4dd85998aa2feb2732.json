{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\nvar labelLayout = require(\"./labelLayout\");\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n    labelLayout(seriesModel, r, width, height);\n  });\n}\nmodule.exports = _default;","map":{"version":3,"names":["_number","require","parsePercent","linearMap","labelLayout","zrUtil","PI2","Math","PI","RADIAN","_default","seriesType","ecModel","api","payload","eachSeriesByType","seriesModel","data","getData","valueDim","mapDimension","center","get","radius","isArray","width","getWidth","height","getHeight","size","min","cx","cy","r0","r","startAngle","minAngle","validDataCount","each","value","isNaN","sum","getSum","unitRadian","clockwise","roseType","stillShowZeroSum","extent","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","dir","idx","angle","setItemLayout","NaN","endAngle","layout","getItemLayout","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/pie/pieLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}