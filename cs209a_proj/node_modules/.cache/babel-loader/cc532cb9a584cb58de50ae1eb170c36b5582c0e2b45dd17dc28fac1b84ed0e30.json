{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar List = require(\"../../data/List\");\nvar createDimensions = require(\"../../data/helper/createDimensions\");\nvar _sourceType = require(\"../../data/helper/sourceType\");\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\nvar _model = require(\"../../util/model\");\nvar getDataItemValue = _model.getDataItemValue;\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\nvar _referHelper = require(\"../../model/referHelper\");\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\nvar Source = require(\"../../data/Source\");\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\nfunction firstDataNotNull(data) {\n  var i = 0;\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n  return data[i];\n}\nvar _default = createListFromArray;\nmodule.exports = _default;","map":{"version":3,"names":["zrUtil","require","List","createDimensions","_sourceType","SOURCE_FORMAT_ORIGINAL","_dimensionHelper","getDimensionTypeByAxis","_model","getDataItemValue","CoordinateSystem","_referHelper","getCoordSysDefineBySeries","Source","_dataStackHelper","enableDataStack","createListFromArray","source","seriesModel","opt","isInstance","seriesDataToSource","coordSysName","get","registeredCoordSys","coordSysDefine","coordSysDimDefs","map","coordSysDims","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionsInfo","dimensions","slice","dimInfoList","coordDimensions","generateCoord","firstCategoryDimIndex","hasNameEncode","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","stackCalculationInfo","list","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","defaultDimValueGetter","hasItemOption","initData","sourceFormat","sampleItem","firstDataNotNull","data","isArray","i","length","_default","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/helper/createListFromArray.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE7C,IAAIC,IAAI,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAErC,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAEpE,IAAIG,WAAW,GAAGH,OAAO,CAAC,8BAA8B,CAAC;AAEzD,IAAII,sBAAsB,GAAGD,WAAW,CAACC,sBAAsB;AAE/D,IAAIC,gBAAgB,GAAGL,OAAO,CAAC,mCAAmC,CAAC;AAEnE,IAAIM,sBAAsB,GAAGD,gBAAgB,CAACC,sBAAsB;AAEpE,IAAIC,MAAM,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAExC,IAAIQ,gBAAgB,GAAGD,MAAM,CAACC,gBAAgB;AAE9C,IAAIC,gBAAgB,GAAGT,OAAO,CAAC,wBAAwB,CAAC;AAExD,IAAIU,YAAY,GAAGV,OAAO,CAAC,yBAAyB,CAAC;AAErD,IAAIW,yBAAyB,GAAGD,YAAY,CAACC,yBAAyB;AAEtE,IAAIC,MAAM,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;AAEzC,IAAIa,gBAAgB,GAAGb,OAAO,CAAC,mCAAmC,CAAC;AAEnE,IAAIc,eAAe,GAAGD,gBAAgB,CAACC,eAAe;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmB,CAACC,MAAM,EAAEC,WAAW,EAAEC,GAAG,EAAE;EACrDA,GAAG,GAAGA,GAAG,IAAI,CAAC,CAAC;EAEf,IAAI,CAACN,MAAM,CAACO,UAAU,CAACH,MAAM,CAAC,EAAE;IAC9BA,MAAM,GAAGJ,MAAM,CAACQ,kBAAkB,CAACJ,MAAM,CAAC;EAC5C;EAEA,IAAIK,YAAY,GAAGJ,WAAW,CAACK,GAAG,CAAC,kBAAkB,CAAC;EACtD,IAAIC,kBAAkB,GAAGd,gBAAgB,CAACa,GAAG,CAACD,YAAY,CAAC;EAC3D,IAAIG,cAAc,GAAGb,yBAAyB,CAACM,WAAW,CAAC;EAC3D,IAAIQ,eAAe;EAEnB,IAAID,cAAc,EAAE;IAClBC,eAAe,GAAG1B,MAAM,CAAC2B,GAAG,CAACF,cAAc,CAACG,YAAY,EAAE,UAAUC,GAAG,EAAE;MACvE,IAAIC,OAAO,GAAG;QACZC,IAAI,EAAEF;MACR,CAAC;MACD,IAAIG,SAAS,GAAGP,cAAc,CAACQ,OAAO,CAACV,GAAG,CAACM,GAAG,CAAC;MAE/C,IAAIG,SAAS,EAAE;QACb,IAAIE,QAAQ,GAAGF,SAAS,CAACT,GAAG,CAAC,MAAM,CAAC;QACpCO,OAAO,CAACK,IAAI,GAAG5B,sBAAsB,CAAC2B,QAAQ,CAAC,CAAC,CAAC;MACnD;;MAEA,OAAOJ,OAAO;IAChB,CAAC,CAAC;EACJ;EAEA,IAAI,CAACJ,eAAe,EAAE;IACpB;IACAA,eAAe,GAAGF,kBAAkB,KAAKA,kBAAkB,CAACY,iBAAiB,GAAGZ,kBAAkB,CAACY,iBAAiB,EAAE,GAAGZ,kBAAkB,CAACa,UAAU,CAACC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;EAC/K;EAEA,IAAIC,WAAW,GAAGpC,gBAAgB,CAACc,MAAM,EAAE;IACzCuB,eAAe,EAAEd,eAAe;IAChCe,aAAa,EAAEtB,GAAG,CAACsB;EACrB,CAAC,CAAC;EACF,IAAIC,qBAAqB;EACzB,IAAIC,aAAa;EACjBlB,cAAc,IAAIzB,MAAM,CAAC4C,IAAI,CAACL,WAAW,EAAE,UAAUT,OAAO,EAAEe,QAAQ,EAAE;IACtE,IAAIC,QAAQ,GAAGhB,OAAO,CAACgB,QAAQ;IAC/B,IAAIC,iBAAiB,GAAGtB,cAAc,CAACuB,eAAe,CAACzB,GAAG,CAACuB,QAAQ,CAAC;IAEpE,IAAIC,iBAAiB,EAAE;MACrB,IAAIL,qBAAqB,IAAI,IAAI,EAAE;QACjCA,qBAAqB,GAAGG,QAAQ;MAClC;MAEAf,OAAO,CAACmB,WAAW,GAAGF,iBAAiB,CAACG,cAAc,EAAE;IAC1D;IAEA,IAAIpB,OAAO,CAACqB,SAAS,CAACC,QAAQ,IAAI,IAAI,EAAE;MACtCT,aAAa,GAAG,IAAI;IACtB;EACF,CAAC,CAAC;EAEF,IAAI,CAACA,aAAa,IAAID,qBAAqB,IAAI,IAAI,EAAE;IACnDH,WAAW,CAACG,qBAAqB,CAAC,CAACS,SAAS,CAACC,QAAQ,GAAG,CAAC;EAC3D;EAEA,IAAIC,oBAAoB,GAAGtC,eAAe,CAACG,WAAW,EAAEqB,WAAW,CAAC;EACpE,IAAIe,IAAI,GAAG,IAAIpD,IAAI,CAACqC,WAAW,EAAErB,WAAW,CAAC;EAC7CoC,IAAI,CAACC,kBAAkB,CAACF,oBAAoB,CAAC;EAC7C,IAAIG,cAAc,GAAGd,qBAAqB,IAAI,IAAI,IAAIe,yBAAyB,CAACxC,MAAM,CAAC,GAAG,UAAUyC,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEf,QAAQ,EAAE;IACzI;IACA,OAAOA,QAAQ,KAAKH,qBAAqB,GAAGkB,SAAS,GAAG,IAAI,CAACC,qBAAqB,CAACH,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAEf,QAAQ,CAAC;EAC3H,CAAC,GAAG,IAAI;EACRS,IAAI,CAACQ,aAAa,GAAG,KAAK;EAC1BR,IAAI,CAACS,QAAQ,CAAC9C,MAAM,EAAE,IAAI,EAAEuC,cAAc,CAAC;EAC3C,OAAOF,IAAI;AACb;AAEA,SAASG,yBAAyB,CAACxC,MAAM,EAAE;EACzC,IAAIA,MAAM,CAAC+C,YAAY,KAAK3D,sBAAsB,EAAE;IAClD,IAAI4D,UAAU,GAAGC,gBAAgB,CAACjD,MAAM,CAACkD,IAAI,IAAI,EAAE,CAAC;IACpD,OAAOF,UAAU,IAAI,IAAI,IAAI,CAACjE,MAAM,CAACoE,OAAO,CAAC3D,gBAAgB,CAACwD,UAAU,CAAC,CAAC;EAC5E;AACF;AAEA,SAASC,gBAAgB,CAACC,IAAI,EAAE;EAC9B,IAAIE,CAAC,GAAG,CAAC;EAET,OAAOA,CAAC,GAAGF,IAAI,CAACG,MAAM,IAAIH,IAAI,CAACE,CAAC,CAAC,IAAI,IAAI,EAAE;IACzCA,CAAC,EAAE;EACL;EAEA,OAAOF,IAAI,CAACE,CAAC,CAAC;AAChB;AAEA,IAAIE,QAAQ,GAAGvD,mBAAmB;AAClCwD,MAAM,CAACC,OAAO,GAAGF,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}