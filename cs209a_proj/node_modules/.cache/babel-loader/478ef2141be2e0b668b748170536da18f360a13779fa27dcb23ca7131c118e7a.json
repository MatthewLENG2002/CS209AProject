{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(\n    // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color);\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\n    var borderColor = seriesModel.get(borderColorAccessPath);\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n        var borderColor = itemModel.get(borderColorAccessPath, true);\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n        if (borderColor != null) {\n          data.setItemVisual(idx, 'borderColor', borderColor);\n        }\n      };\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","map":{"version":3,"names":["Gradient","require","_default","createOnAllSeries","performRawSeries","reset","seriesModel","ecModel","data","getData","colorAccessPath","visualColorAccessPath","split","color","get","getColorFromPalette","name","getSeriesCount","setVisual","borderColorAccessPath","visualBorderColorAccessPath","borderColor","isSeriesFiltered","each","idx","setItemVisual","getDataParams","dataEach","itemModel","getItemModel","hasItemOption","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/visual/seriesColor.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color);\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\n    var borderColor = seriesModel.get(borderColorAccessPath);\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n        var borderColor = itemModel.get(borderColorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n\n        if (borderColor != null) {\n          data.setItemVisual(idx, 'borderColor', borderColor);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,8BAA8B,CAAC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG;EACbC,iBAAiB,EAAE,IAAI;EACvBC,gBAAgB,EAAE,IAAI;EACtBC,KAAK,EAAE,UAAUC,WAAW,EAAEC,OAAO,EAAE;IACrC,IAAIC,IAAI,GAAGF,WAAW,CAACG,OAAO,EAAE;IAChC,IAAIC,eAAe,GAAG,CAACJ,WAAW,CAACK,qBAAqB,IAAI,iBAAiB,EAAEC,KAAK,CAAC,GAAG,CAAC;IACzF,IAAIC,KAAK,GAAGP,WAAW,CAACQ,GAAG,CAACJ,eAAe,CAAC,CAAC;IAAA,GAC1CJ,WAAW,CAACS,mBAAmB;IAAE;IACpCT,WAAW,CAACU,IAAI,EAAE,IAAI,EAAET,OAAO,CAACU,cAAc,EAAE,CAAC,CAAC,CAAC;IACnD;;IAEAT,IAAI,CAACU,SAAS,CAAC,OAAO,EAAEL,KAAK,CAAC;IAC9B,IAAIM,qBAAqB,GAAG,CAACb,WAAW,CAACc,2BAA2B,IAAI,uBAAuB,EAAER,KAAK,CAAC,GAAG,CAAC;IAC3G,IAAIS,WAAW,GAAGf,WAAW,CAACQ,GAAG,CAACK,qBAAqB,CAAC;IACxDX,IAAI,CAACU,SAAS,CAAC,aAAa,EAAEG,WAAW,CAAC,CAAC,CAAC;;IAE5C,IAAI,CAACd,OAAO,CAACe,gBAAgB,CAAChB,WAAW,CAAC,EAAE;MAC1C,IAAI,OAAOO,KAAK,KAAK,UAAU,IAAI,EAAEA,KAAK,YAAYb,QAAQ,CAAC,EAAE;QAC/DQ,IAAI,CAACe,IAAI,CAAC,UAAUC,GAAG,EAAE;UACvBhB,IAAI,CAACiB,aAAa,CAACD,GAAG,EAAE,OAAO,EAAEX,KAAK,CAACP,WAAW,CAACoB,aAAa,CAACF,GAAG,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC;MACJ,CAAC,CAAC;;MAGF,IAAIG,QAAQ,GAAG,UAAUnB,IAAI,EAAEgB,GAAG,EAAE;QAClC,IAAII,SAAS,GAAGpB,IAAI,CAACqB,YAAY,CAACL,GAAG,CAAC;QACtC,IAAIX,KAAK,GAAGe,SAAS,CAACd,GAAG,CAACJ,eAAe,EAAE,IAAI,CAAC;QAChD,IAAIW,WAAW,GAAGO,SAAS,CAACd,GAAG,CAACK,qBAAqB,EAAE,IAAI,CAAC;QAE5D,IAAIN,KAAK,IAAI,IAAI,EAAE;UACjBL,IAAI,CAACiB,aAAa,CAACD,GAAG,EAAE,OAAO,EAAEX,KAAK,CAAC;QACzC;QAEA,IAAIQ,WAAW,IAAI,IAAI,EAAE;UACvBb,IAAI,CAACiB,aAAa,CAACD,GAAG,EAAE,aAAa,EAAEH,WAAW,CAAC;QACrD;MACF,CAAC;MAED,OAAO;QACLM,QAAQ,EAAEnB,IAAI,CAACsB,aAAa,GAAGH,QAAQ,GAAG;MAC5C,CAAC;IACH;EACF;AACF,CAAC;AACDI,MAAM,CAACC,OAAO,GAAG9B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}