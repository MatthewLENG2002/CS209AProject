{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\nvar __DEV__ = _config.__DEV__;\nvar echarts = require(\"../../echarts\");\nvar zrUtil = require(\"zrender/lib/core/util\");\nvar graphic = require(\"../../util/graphic\");\nvar _helper = require(\"./helper\");\nvar setLabel = _helper.setLabel;\nvar Model = require(\"../../model/Model\");\nvar barItemStyle = require(\"./barItemStyle\");\nvar Path = require(\"zrender/lib/graphic/Path\");\nvar _throttle = require(\"../../util/throttle\");\nvar throttle = _throttle.throttle;\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n  return coordSysClipArea;\n}\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n    this._data = null;\n  }\n});\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    return clipped;\n  },\n  polar: function (coordSysClipArea) {\n    return false;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n    return sector;\n  }\n};\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: data.getLayout('largeDataIndices'),\n    __barWidth: data.getLayout('barWidth')\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n  return -1;\n}\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\nmodule.exports = _default;","map":{"version":3,"names":["_config","require","__DEV__","echarts","zrUtil","graphic","_helper","setLabel","Model","barItemStyle","Path","_throttle","throttle","_createClipPathFromCoordSys","createClipPath","Sausage","BAR_BORDER_WIDTH_QUERY","_eventPos","extend","prototype","getClipArea","coord","data","coordSysClipArea","getArea","type","baseAxis","getBaseAxis","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","_default","extendChartView","render","seriesModel","ecModel","api","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","group","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","needsClip","removeClipPath","roundCap","diff","add","dataIndex","hasValue","itemModel","getItemModel","layout","isClipped","clip","remove","el","elementCreator","setItemGraphicEl","updateStyle","update","newIndex","oldIndex","getItemGraphicEl","updateProps","shape","removeRect","removeSector","execute","createLarge","clipPath","setClipPath","dispose","noop","eachItemGraphicEl","removeAll","mathMax","Math","max","mathMin","min","cartesian2d","coordSysBoundingRect","signWidth","signHeight","x2","y2","clipped","polar","isUpdate","rect","Rect","rectShape","animateProperty","animateTarget","isRadial","clockwise","startAngle","endAngle","ShapeClass","Sector","sector","defaults","sectorShape","style","text","parent","r","r0","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isPolar","color","getItemVisual","opacity","itemStyleModel","getModel","hoverStyle","getBarItemStyle","setShape","useStyle","fill","cursorStyle","getShallow","attr","labelPositionOutside","setHoverStyle","rawLayout","lineWidth","abs","LargePath","points","buildPath","ctx","startPoint","__startPoint","baseDimIdx","__baseDimIdx","i","length","moveTo","lineTo","incremental","__largeDataIndices","__barWidth","setLargeStyle","seriesIndex","on","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","largeDataIndices","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","len","ii","barBaseVal","barValueVal","borderColor","getVisual","itemStyle","getItemStyle","stroke","module","exports"],"sources":["/Users/tangxinyu/WebstormProjects/cs209a_proj/node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar _throttle = require(\"../../util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\nvar Sausage = require(\"../../util/shape/sausage\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'barBorderWidth'];\nvar _eventPos = [0, 0]; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (coord.type === 'cartesian2d') {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var needsClip = seriesModel.get('clip', true);\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      var el = elementCreator[coord.type](dataIndex, layout, isHorizontalOrRadial, animationModel, false, roundCap);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (needsClip) {\n        var isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n          return;\n        }\n      }\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](newIndex, layout, isHorizontalOrRadial, animationModel, true, roundCap);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group); // Use clipPath in large mode.\n\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel) {\n    this._clear(ecModel);\n  },\n  _clear: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel && ecModel.get('animation') && data && !this._isLargeDraw) {\n      data.eachItemGraphicEl(function (el) {\n        if (el.type === 'sector') {\n          removeSector(el.dataIndex, ecModel, el);\n        } else {\n          removeRect(el.dataIndex, ecModel, el);\n        }\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n  }\n});\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysBoundingRect.x + coordSysBoundingRect.width);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysBoundingRect.y + coordSysBoundingRect.height);\n    layout.x = x;\n    layout.y = y;\n    layout.width = x2 - x;\n    layout.height = y2 - y;\n    var clipped = layout.width < 0 || layout.height < 0; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return clipped;\n  },\n  polar: function (coordSysClipArea) {\n    return false;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (dataIndex, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (dataIndex, layout, isRadial, animationModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : graphic.Sector;\n    var sector = new ShapeClass({\n      shape: zrUtil.defaults({\n        clockwise: clockwise\n      }, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var hoverStyle = itemModel.getModel('emphasis.itemStyle').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nvar LargePath = Path.extend({\n  type: 'largeBar',\n  shape: {\n    points: []\n  },\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    __startPoint: startPoint,\n    __baseDimIdx: baseDimIdx,\n    __largeDataIndices: data.getLayout('largeDataIndices'),\n    __barWidth: data.getLayout('barWidth')\n  });\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  el.seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  largePath.dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var borderColor = data.getVisual('borderColor') || data.getVisual('color');\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(['color', 'borderColor']);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nmodule.exports = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}